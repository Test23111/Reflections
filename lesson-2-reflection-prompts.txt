What happens when you initialize a repository? Why do you need to do it?
	When i initialize a repository a folder named .git is made and if there are files in the directory they are 
	automatically marked as untracked. I need to do this in ored to tell git that I want to make a repository there 
	

How is the staging area different from the working directory and the repository?
What value do you think it offers?
	the staging area can show differences it is like a buffer for changes you want to try but don't want to commit yet
	

How can you use the staging area to make sure you have one commit per logical
change?
	compare the differences between it and the HEAD

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?
	makes it more clear by showing which comes from which branch 

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
	The result is updated branch witch the merged branch and all its changes into one, the old branch is deleted we represent it in the diagram the way we do because
	each branch has separate commits we might want to see or access 

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
	For example if i would like to make a different version of my project like use another language or make another play mode
	but i don't want these changes to be part of the working app, branches would be helpful because they would divide the
	different versions of the app i wouldl ike to test
